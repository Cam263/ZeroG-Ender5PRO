#[gcode_macro G28]
#rename_existing: G28.0
#gcode:
#  Home

    # Do all your homing stuff here, make sure all axes get homed by your commands.

[gcode_macro heat_soak]
gcode:
    Home
    G1 X175 Y175 Z25
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=100
    update_idle_timeout H=4

[gcode_macro LED_ON]
gcode:
  SET_PIN PIN=caselight VALUE=1
[gcode_macro LED_PCT_IDLE]
gcode:
  SET_PIN PIN=caselight VALUE=0.06
[gcode_macro LED_PCT_PRINT]
gcode:
  SET_PIN PIN=caselight VALUE=0.4
[gcode_macro LED_OFF]
gcode:
  SET_PIN PIN=caselight VALUE=0

[gcode_macro UPDATE_IDLE_TIMEOUT]
description: Send `UPDATE_IDLE_TIMEOUT [H=<value>] [M=<value>] [S=<value>] ` to set the Hours, Minutes, and Seconds for Idle_Timout. Passing no parameters will return it to the config default value.
Gcode:
  {% set Hours   = params.H|default(0)|int %}
  {% set Minutes = params.M|default(0)|int %}
  {% set Seconds = params.S|default(0)|int %}
    {% set DEFAULT = printer.configfile.settings.idle_timeout.timeout|int %}

	{% set TIME = ((Hours*3600) + (Minutes*60) + (Seconds))|int %}
	
	{% if TIME == 0 %} # No time was entered
        {% set TIME = DEFAULT %}
	{% endif %}
	set_idle_timeout timeout={TIME|int}

[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}


[gcode_macro SENSORLESS_HOME_X]
gcode:
    {% set HOME_CUR = 0.700 %}
    {% set driver_config = printer.configfile.settings['tmc2209 stepper_x'] %}
    {% set RUN_CUR = driver_config.run_current %}
    # Set current for sensorless homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR}
    # Pause to ensure driver stall flag is clear
    G4 P2000
    # Home
    G28 X0
    # Move away
    G90
    G1 X5 F1200
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR}

[gcode_macro SENSORLESS_HOME_Y]
gcode:
    {% set HOME_CUR = 0.700 %}
    {% set driver_config = printer.configfile.settings['tmc2209 stepper_y'] %}
    {% set RUN_CUR = driver_config.run_current %}
    # Set current for sensorless homing
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR}
    # Pause to ensure driver stall flag is clear
    G4 P2000
    # Home
    G28 Y0
    # Move away
    G90
    G1 Y20 F1200
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CUR}

[gcode_macro home]
gcode:
    {% set HOME_CUR = 0.700 %}
    {% set driver_config = printer.configfile.settings['tmc2209 stepper_y'] %}
    {% set RUN_CUR = driver_config.run_current %}
 # Set current for sensorless homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR}
    # Pause to ensure driver stall flag is clear
    G4 P2000
    # Home
    G28 X0
    # Move away
    G90
    G1 X150 F1200
    # Set current for sensorless homing
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR}
    # Pause to ensure driver stall flag is clear
    G4 P2000
    # Home
    G28 Y0
    # Move away
    G90
    G1 Y35 F1200
   
    #home Z
    G28 Z

 # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CUR}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR}
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT={RUN_CUR}


# --------------------------------------------------------------------

# --------------------------- START PRINT ----------------------------
[gcode_macro PRINT_START]
gcode:
   #Home
     Home 
   # Parameters
     {% set bed_temp = params.BED|int %}
     {% set hotend_temp = params.HOTEND|int %}
     M117 Waiting on bed
     M190 S{bed_temp}
     M117 Leveling
     BED_MESH_CLEAR
   #Calibrate bed mesh
     BED_MESH_CALIBRATE PROFILE=<default>
   #Load Bed mesh profile
     BED_MESH_PROFILE LOAD=default
   #Absolute positioning
     G90
   # Home
     M117 Homing
     HOME
   # Move Z up
     G1 Z10.0 F3000
   # Reset extruder
     G92 E0
   # Set hotend temperature
     M117 Waiting on nozzle
     M104 S{hotend_temp}
   # Move Z axis up a little to prevent scratching heat bed
    # G1 Z10 F3000
   # Wait for Hotend to come to temp
     M109 S{hotend_temp}
   # Move to start position
     #G1 X200 Y200 Z5.0 F5000.0
    M117 Purge!
   #Adaptive Purge Voron logo
    ZEROG_PURGE
   # Reset extruder
     G92 E0
     M117 Printing
# --------------------------------------------------------------------

# ---------------------------- END PRINT -----------------------------
[gcode_macro PRINT_END]
variable_machine_depth: 231
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Relative positionning
    G91
    # Retract and raise Z
    G1 Z0.2 E-2 F2400
    # Wipe out
    G1 X5 Y5 F3000
    # Raise Z more
    G1 Z10
    #Home Y axis
    SENSORLESS_HOME_Y
    # Absolute positionning
    G90
    # Disable steppers
    M84
    # Print message on LCD
    M117 Good work, Cameron!


